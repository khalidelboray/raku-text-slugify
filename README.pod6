=begin pod

=NAME

C«Text::Slugify» - create a URL slug from text.

=SYNOPSIS

=begin code
use Text::Slugify;

my $txt;

$txt = "This is a test ---";
slugify $txt; 
#=> «this-is-a-test»

$txt = 'C\'est déjà l\'été.';
slugify $txt;
#=> «c-est-deja-l-ete»

$txt = 'jaja---lol-méméméoo--a';
slugify $txt, :max-length(9);
#=> «jaja-lol»
=end code

For more examples, have a look at the test file (C«t/basic.t6»).

=DESCRIPTION

C«Text::Slugify» is a module to slugify text. It takes a piece of text,
removes punctuation, spaces and other unwanted characters to produce a
string suitable for use in a URL.

=INSTALLATION

=head2 Using zef:
=code zef update && zef install Text::Slugify

=head2 From source:
=begin code
git clone git@gitlab.com:uzluisf/raku-text-slugify.git
cd raku-text-slugify && zef install .
=end code

=SUBROUTINES

The module exports the following subroutines:

=head4 C«slugify»

=begin code
sub slugify(
    Str:D $text is copy,            # Text to be slugified.
    Int:D :$max-length = 0,         # Output string length.
    :$separator = "-",              # Separator between words.
    :$regex-pattern = Nil,          # Regex pattern for allowed characters in output text.
    :@stopwords = [],               # Words to be discounted from output text.
    :@replacements = [],            # List of replacement rule pairs e.g. ['|'=>'or', '%'=>'percent']
    Bool:D :$entities = True, 
    Bool:D :$decimal = True, 
    Bool:D :$hexadecimal = True, 
    Bool:D :$word-boundary = False, 
    Bool:D :$lowercase = True,      # Set case sensitivity by setting it to False.
    Bool:D :$save-order = False,    # If True and max-length > 0 return whole words in the initial order.
)
=end code

=head4 C«smart-truncate»

=begin code
sub smart-truncate(
    Str:D $string is rw,             # String to be modified.
    Int:D :$max-length = 0,          # Output string length.
    Bool:D :$word-boundary = False,  
    Str:D :$separator = " ",         # Separator between words.
    Bool:D :$save-order = False,     # Output text's word order same as input.
)
=end code

B«NOTE»: To import the subroutine C«smart-truncate» alongside C«slugify»
into your code, use C«use Text::Slugify :ALL».

=CREDIT-REFERENCE

This module is mostly based on 
L«Python Slugify|https://github.com/un33k/python-slugify».

=end pod
